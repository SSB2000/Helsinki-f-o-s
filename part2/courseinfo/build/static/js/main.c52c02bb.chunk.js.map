{"version":3,"sources":["Components/Note.js","services/notes.js","Components/Notification.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","url","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","Notification","message","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","error","setErrorMessage","useEffect","noteServices","initialNotes","catch","err","setTimeout","notesToShow","filter","onSubmit","event","preventDefault","noteObject","length","Date","toISOString","Math","random","returnedNote","placeholder","value","onChange","target","type","map","find","n","changedNote","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c52c02bb.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n\tconst label = note.important \r\n\t\t? 'make not important'\r\n\t\t: 'make important'\r\n\treturn (\r\n\t\t<li className='note'>\r\n\t\t\t{note.content}\r\n\t\t\t<button onClick={toggleImportance}>{label}</button>\t\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nexport default Note","import axios from \"axios\";\r\n\r\nconst url = \"/api/notes\";\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(url);\r\n    const nonExisting = {\r\n        id: 10000,\r\n        content: \"This note is not saved to server\",\r\n        date: \"2019-05-30T17:30:31.098Z\",\r\n        important: true,\r\n    };\r\n    return request.then((response) => response.data.concat(nonExisting));\r\n};\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(url, newObject);\r\n    return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${url}/${id}`, newObject);\r\n    return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, update };\r\n","import React from \"react\";\r\n\r\nexport default function Notification({ message }) {\r\n    if (message === null) return null;\r\n    return <div className=\"error\">{message}</div>;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport Note from \"./Components/Note\"; // For exercise 2.6 - 2.10\n// import { date } from 'check-types';\n// import Course from './Components/Course' // For exercise 2.1 - 2.5\n// import axios from \"axios\";\nimport noteServices from \"./services/notes\";\nimport \"./index.css\";\nimport Notification from \"./Components/Notification\";\n// Exercise 2.6 - 2.10\nconst App = () => {\n    const [notes, setNotes] = useState([]);\n    const [newNote, setNewNote] = useState(\"\");\n    const [showAll, setShowAll] = useState(true);\n    const [error, setErrorMessage] = useState(null);\n    const hook = () => {\n        noteServices\n            .getAll()\n            .then((initialNotes) => {\n                setNotes(initialNotes);\n            })\n            .catch((err) => {\n                setErrorMessage(`Notes not found!`);\n                setTimeout(() => {\n                    setErrorMessage(null);\n                }, 4000);\n                setNotes([]);\n            });\n    };\n    useEffect(hook, []);\n\n    const toggleImportance = (id) => {\n        const note = notes.find((n) => n.id === id);\n        const changedNote = { ...note, important: !note.important };\n        noteServices\n            .update(id, changedNote)\n            .then((returnedNote) => {\n                setNotes(\n                    notes.map((note) => (note.id !== id ? note : returnedNote))\n                );\n            })\n            .catch((err) => {\n                setErrorMessage(\n                    `Note '${note.content}' was already removed from server`\n                );\n                setTimeout(() => {\n                    setErrorMessage(null);\n                }, 3000);\n                setNotes(notes.filter((note) => note.id !== id));\n            });\n    };\n\n    const notesToShow = showAll\n        ? notes\n        : notes.filter((note) => note.important);\n\n    const addNote = (event) => {\n        event.preventDefault();\n        const noteObject = {\n            id: notes.length + 1,\n            content: newNote,\n            date: new Date().toISOString(),\n            important: Math.random > 0.5,\n        };\n\n        noteServices.create(noteObject).then((returnedNote) => {\n            setNotes(notes.concat(returnedNote));\n            setNewNote(\"\");\n        });\n    };\n\n    const handleNoteChange = (event) => {\n        setNewNote(event.target.value);\n    };\n\n    return (\n        <div>\n            <h1>Notes</h1>\n            <Notification message={error} />\n            <form onSubmit={addNote}>\n                <input\n                    placeholder=\"Enter your note here...\"\n                    value={newNote}\n                    onChange={handleNoteChange}\n                />\n                <button type=\"submit\">Save</button>\n            </form>\n            <br />\n            <br />\n            <div>\n                <button type=\"button\" onClick={() => setShowAll(!showAll)}>\n                    show {showAll ? \"important\" : \"all\"}\n                </button>\n            </div>\n            <ul>\n                {notesToShow.map((note) => (\n                    <Note\n                        key={note.id}\n                        toggleImportance={() => toggleImportance(note.id)}\n                        note={note}\n                    />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\n// Exercies 2.1 - 2.5\n/*\nconst App = () => {\n  const courses = [\n    {\n      name: 'Half Stack application development',\n      id: 1,\n      parts: [\n        {\n          name: 'Fundamentals of React',\n          exercises: 10,\n          id: 1\n        },\n        {\n          name: 'Using props to pass data',\n          exercises: 7,\n          id: 2\n        },\n        {\n          name: 'State of a component',\n          exercises: 14,\n          id: 3\n        },\n        {\n          name: 'Redux',\n          exercises: 11,\n          id: 4\n        }\n      ]\n    }, \n    {\n      name: 'Node.js',\n      id: 2,\n      parts: [\n        {\n          name: 'Routing',\n          exercises: 3,\n          id: 1\n        },\n        {\n          name: 'Middlewares',\n          exercises: 7,\n          id: 2\n        }\n      ]\n    }\n  ]\n\n  return (\n    <div>\n      {courses.map((course) => (\n          <Course key={course.id} course={course} />\n        ))}\n    </div>\n  )\n}\n*/\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}